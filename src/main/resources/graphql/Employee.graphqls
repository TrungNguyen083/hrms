# Define the EmployeeDocument type
type Employee {
    id: Int!
    firstName: String
    lastName: String
    address:String
    email: String
    gender: String
    joinedDate: String
    dateOfBirth: String
    phoneNumber: String
    currentContract: Int
    profileBio: String
    facebookLink: String
    twitterLink: String
    linkedinLink: String
    instagramLink: String
    department: Department
    position: Position
    jobLevel: JobLevel
    sourceFile: ImageSource
    status: Int
    leftDate: String
}

type EmployeeDetail {
    employeeDocument: Employee
    emergencyContacts: [EmergencyContact]
    imageUrl: String
}

type EmployeeDTO {
    employeeDocument: Employee
    imageUrl: String
}

type EmployeePaging {
    data: [EmployeeDTO]!
    pagination: Pagination!
}

input EmployeeInput {
    id: Int
    firstName: String!
    lastName: String!
    gender: String!
    email: String!
    joinedDate: String!
    dateOfBirth: String!
    phoneNumber: String!
    address: String!
    currentContract: Int!
    profileBio: String
    facebookLink: String
    twitterLink: String
    linkedinLink: String
    instagramLink: String
    positionId: Int!
    jobLevelId: Int
    departmentId: Int!
    emergencyContacts: [EmergencyContactInput!]!
}

type CurrentHeadcount {
    totalEmployee: Int
    percentage: Float
    isIncreased: Boolean
}

type HeadcountChartData {
    label: String
    data: Int
}
