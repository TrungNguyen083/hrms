type EmployeePerformance {
    employeePerformanceId: Int!
    employeeDocument: Employee!
    selfAssessment: Int!
    supervisorAssessment: Int!
    finalAssessment: Int!
    performanceCycle: PerformanceCycle!
}

type EmployeePerformancePagination {
    data: [EmployeePerformance]
    pagination: Pagination
}

type EmployeePerformanceRatingScore {
    label: String
    score: Int
}

type EmployeePotentialPerformance {
    employeeDocument: Employee
    profileImgUri: String
    potential: Int
    performance: Int
}

enum Potential {
    HIGH
    MEDIUM
    LOW
}

enum Performance {
    HIGH
    MEDIUM
    LOW
}

type EmployeePotentialPerformanceDTO {
    employeeId: Int!
    fullName: String!
    profileImgUri: String
    potential: Float!
    performance: Float!
}

type PerformanceByJobLevelChartDTO {
    labels: [JobLevel!]!
    dataset: [DatasetDTO]
}

type PerformanceByJobLevel {
    labels: [JobLevel]
    categories: [String]
    datasetDTOS: [[Float]]
}

type PerformanceByJobLevelChart {
    labels: [JobLevel!]!
    datasetDTOS: [DatasetDTO]
}

type PerformanceRangeData {
    jobLevelIds: [Int]
    data: [Float]
}

type PerformanceOverall {
    evaluationCycleName: String
    firstName: String
    lastName: String
    profileImage: String
    position: String
    level: String
    rating: String
    status: String
    isSubmit: Boolean
}

type PerformanceCategoryRating {
    categoryId: Int
    categoryName: String
    categoryDescription: String
    weight: Int
    rating: Float
}

type PerformanceQuestionRating {
    questionId: Int
    questionName: String
    questionDescription: String
    comment: String
    rating: Float
    categoryId: Int
}