type Department {
    id: Int!
    departmentName: String
    sum: Employee
}

type EvaluateCycle {
    id: Int!
    evaluateCycleName: String
    description: String
    startDate: String
    dueDate: String
    year: String
    status: String
    initialDate: String
}

type TimeLine {
    timeLineName: String
    startDate: String
    dueDate: String
    isDone: Boolean
}

type CycleEvaluationProgress{
    completedPercentage: Float
    selfEvalPercentage: Float
    managerEvalPercentage: Float
}

type JobLevel {
    id: Int!
    jobLevelName: String
}

type PerformanceCycle {
    performanceCycleId: Int!
    performanceCycleName: String
    description: String
    performanceCycleStartDate: String
    performanceCycleEndDate: String
    isDone: Boolean
    status: String
    template: Template
    performanceWeightage: Float
    goalWeightage: Float
}

type PerformanceRange {
    id: Int!
    text: String
    description: String
    minValue: Float
    maxValue: Float
    ordered: Int
}

type Position {
    id: Int!
    positionName: String
    hasLevel: Boolean
    hasDepartment: Boolean
}

type PositionLevel {
    id: Int!
    position: Position
    jobLevel: JobLevel
}

type PositionLevelNodeDTO {
    id: Int!
    title: String!
    matchPercentage: Float!
    nextPositionLevels: [PositionLevelNodeDTO]
}

type ProficiencyLevel {
    id: Int!
    proficiencyLevelName: String
    proficiencyLevelDescription: String
    score: Int
}

type Skill {
    id: Int!
    skillName: String
    competency: Competency
    description: String
}

type Template {
    id: Int!
    templateName: String
    templateDescription: String
    createdAt: String
    createdBy: Employee
}

type EmployeeEvaProgress {
    employeeId: Int
    name: String
    image: String
    selfStatus: String
    evaluatorStatus: String
    finalStatus: String
}

type EmployeeEvaProgressPaging {
    data: [EmployeeEvaProgress]
    pagination: Pagination!
}

type EvaluationResult {
    skillId: Int
    selfEvaluation: Int
    evaluatorEvaluation: Int
}

type EmployeeFeedback {
    feedBackerProfileImage: String
    feedBackerFirstName: String
    feedBackerLastName: String
    content: String
    createdAt: String
}

type EvaluationPaging {
    data: [EvaluationItem]!
    pagination: Pagination!
}

type EvaluationItem {
    employeeId: Int
    profileImage: String
    firstName: String
    lastName: String
    position: String
    level: String
    employeeStatus: String
    evaluatorStatus: String
    finalStatus: String
}

type EvaluationTitle {
    title: String
    status: String
    startDate: String
    dueDate: String
}